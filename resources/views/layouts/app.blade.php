<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Generated by create next app">
    <title>@yield('title', 'Create Next App')</title>
    <!-- Tailwind CSS -->
    <link href="{{ asset('css/app.css') }}" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <script src="https://kit.fontawesome.com/610f7e8110.js" crossorigin="anonymous"></script>
    <!-- Geist Fonts via Google Fonts or Vercel CDN -->
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Geist+Sans:wght@400;500;700&family=Geist+Mono:wght@400;500;700&display=swap">
    <style>
        :root {
            --font-geist-sans: 'Geist Sans', sans-serif;
            --font-geist-mono: 'Geist Mono', monospace;
        }

        body {
            font-family: var(--font-geist-sans);
        }

        .font-mono {
            font-family: var(--font-geist-mono);
        }
    </style>

    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

</head>

<body class="antialiased">
    @include('components.navbar')
    @yield('content')
    <footer class="bg-gray-900 text-white mt-auto">

        @include('components.footer')
    </footer>
    <script>
        const selfieInput = document.getElementById('selfieInput');
        const previewContainer = document.getElementById('previewContainer');
        const previewImage = document.getElementById('previewImage');
        const cropButton = document.getElementById('cropButton');
        const submitButton = document.getElementById('submitButton');
        const submitText = document.getElementById('submitText');
        const loadingSpinner = document.getElementById('loadingSpinner');

        // Image Preview
        selfieInput.addEventListener('change', (event) => {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    previewImage.src = e.target.result;
                    previewContainer.classList.remove('hidden');
                    cropButton.classList.remove('hidden');
                };
                reader.readAsDataURL(file);
            }
        });

        // Basic Crop Functionality (Placeholder)
        cropButton.addEventListener('click', () => {
            // Implement cropping logic here (e.g., using a library like Cropper.js)
            alert('Crop functionality placeholder. Integrate a cropping library like Cropper.js for full functionality.');
        });

        // Loading Animation
        document.getElementById('uploadForm').addEventListener('submit', () => {
            submitText.textContent = 'Searching...';
            loadingSpinner.classList.remove('hidden');
            submitButton.disabled = true;
        });
    </script>
    @stack('scripts')
</body>

</html>